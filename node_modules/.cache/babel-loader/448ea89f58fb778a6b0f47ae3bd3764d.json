{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/lucasgiuri/Desktop/pruebass/with-jest-app/components/Sidebar/Sidebar.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport { withRouter } from 'next/router';\nimport { getLinks } from '../../apis/links';\nimport './Sidebar.scss';\n\nvar Sidebar = function Sidebar(_ref) {\n  var router = _ref.router,\n      isOpen = _ref.isOpen,\n      onSidebarClick = _ref.onSidebarClick;\n  var currentPath = router.asPath;\n  var links = getLinks();\n  var sidebarClasses = ['sidebar'];\n\n  if (isOpen) {\n    sidebarClasses = [].concat(_toConsumableArray(sidebarClasses), ['sidebar--open']);\n  }\n\n  return React.createElement(\"div\", {\n    className: sidebarClasses.join(' '),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, links.map(function (link) {\n    var id = link.id,\n        value = link.value,\n        url = link.url;\n    var linkClasses = ['sidebar__link'];\n\n    if (currentPath === url) {\n      linkClasses = [].concat(_toConsumableArray(linkClasses), ['sidebar__link--active']);\n    }\n\n    return React.createElement(Link, {\n      href: url,\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: linkClasses.join(' '),\n      onClick: onSidebarClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"sidebar__link--text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, value)));\n  }));\n};\n\nSidebar.propTypes = {\n  onSidebarClick: PropTypes.func,\n  isOpen: PropTypes.bool\n};\nSidebar.defaultProps = {\n  onSidebarClick: function onSidebarClick() {},\n  isOpen: false\n};\nexport default withRouter(Sidebar);","map":{"version":3,"sources":["/Users/lucasgiuri/Desktop/pruebass/with-jest-app/components/Sidebar/Sidebar.js"],"names":["React","PropTypes","Link","withRouter","getLinks","Sidebar","router","isOpen","onSidebarClick","currentPath","asPath","links","sidebarClasses","join","map","link","id","value","url","linkClasses","propTypes","func","bool","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAO,gBAAP;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAsC;AAAA,MAApCC,MAAoC,QAApCA,MAAoC;AAAA,MAA5BC,MAA4B,QAA5BA,MAA4B;AAAA,MAApBC,cAAoB,QAApBA,cAAoB;AACrD,MAAMC,WAAW,GAAGH,MAAM,CAACI,MAA3B;AACG,MAAMC,KAAK,GAAGP,QAAQ,EAAtB;AACA,MAAIQ,cAAc,GAAG,CAAC,SAAD,CAArB;;AAEA,MAAIL,MAAJ,EAAY;AACRK,IAAAA,cAAc,gCAAOA,cAAP,IAAuB,eAAvB,EAAd;AACH;;AAEJ,SACC;AAAK,IAAA,SAAS,EAAEA,cAAc,CAACC,IAAf,CAAoB,GAApB,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEF,KAAK,CAACG,GAAN,CAAU,UAAAC,IAAI,EAAI;AAAA,QACVC,EADU,GACSD,IADT,CACVC,EADU;AAAA,QACNC,KADM,GACSF,IADT,CACNE,KADM;AAAA,QACCC,GADD,GACSH,IADT,CACCG,GADD;AAElB,QAAIC,WAAW,GAAG,CAAC,eAAD,CAAlB;;AAEA,QAAIV,WAAW,KAAKS,GAApB,EAAyB;AACxBC,MAAAA,WAAW,gCAAOA,WAAP,IAAoB,uBAApB,EAAX;AACA;;AAED,WACC,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAED,GAAZ;AAAiB,MAAA,GAAG,EAAEF,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAI,MAAA,SAAS,EAAEG,WAAW,CAACN,IAAZ,CAAiB,GAAjB,CAAf;AAAsC,MAAA,OAAO,EAAEL,cAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAG,MAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCS,KAApC,CADD,CADD,CADD;AAOA,GAfA,CADF,CADD;AAoBA,CA7BD;;AA+BAZ,OAAO,CAACe,SAAR,GAAoB;AACnBZ,EAAAA,cAAc,EAAEP,SAAS,CAACoB,IADP;AAEnBd,EAAAA,MAAM,EAAEN,SAAS,CAACqB;AAFC,CAApB;AAKAjB,OAAO,CAACkB,YAAR,GAAuB;AACtBf,EAAAA,cAAc,EAAE,0BAAM,CAAE,CADF;AAEtBD,EAAAA,MAAM,EAAE;AAFc,CAAvB;AAKA,eAAeJ,UAAU,CAACE,OAAD,CAAzB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport { withRouter } from 'next/router';\nimport { getLinks } from '../../apis/links';\nimport './Sidebar.scss';\n\nconst Sidebar = ({router, isOpen, onSidebarClick}) => {\n\tconst currentPath = router.asPath;\n    const links = getLinks();\n    let sidebarClasses = ['sidebar'];\n    \n    if (isOpen) {\n        sidebarClasses = [...sidebarClasses, 'sidebar--open'];\n    }\n\n\treturn (\n\t\t<div className={sidebarClasses.join(' ')}>\n\t\t\t{links.map(link => {\n\t\t\t\tconst { id, value, url } = link;\n\t\t\t\tlet linkClasses = ['sidebar__link'];\n\t\t\t\t\n\t\t\t\tif (currentPath === url) {\n\t\t\t\t\tlinkClasses = [...linkClasses, 'sidebar__link--active'];\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<Link href={url} key={id}>\n\t\t\t\t\t\t<li className={linkClasses.join(' ')} onClick={onSidebarClick}>\n\t\t\t\t\t\t\t<a className=\"sidebar__link--text\">{value}</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</Link>\n\t\t\t\t)\n\t\t\t})}\n\t\t</div>\n\t);\n}\n\nSidebar.propTypes =Â {\n\tonSidebarClick: PropTypes.func,\n\tisOpen: PropTypes.bool\n};\n\nSidebar.defaultProps = {\n\tonSidebarClick: () => {},\n\tisOpen: false\n};\n\nexport default withRouter(Sidebar);"]},"metadata":{},"sourceType":"module"}